on: [push, pull_request]

name: Continuous integration

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        rust:
          - stable
          - beta
          - nightly
    env:
      # 20 MiB stack
      RUST_MIN_STACK: 20971520

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set stack size
        if: startsWith(matrix.os, 'windows')
        run: echo "RUSTFLAGS=-C link-arg=/STACK:20971520" >> $env:GITHUB_ENV

      - name: Install LLVM and Clang
        if: startsWith(matrix.os, 'windows')
        uses: KyleMayes/install-llvm-action@v1.5.3
        with:
          version: "13.0"
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        if: startsWith(matrix.os, 'windows')
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      - name: Install OpenSSL
        if: startsWith(matrix.os, 'windows')
        run: choco install openssl --limit-output

      - name: Set OPENSSL_ROOT_DIR
        if: startsWith(matrix.os, 'windows')
        run: echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64" >> $env:GITHUB_ENV

      - name: Set OPENSSL_ROOT_DIR
        if: startsWith(matrix.os, 'macos')
        run: echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1" >> $GITHUB_ENV

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Cargo build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build

      - name: Cargo test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test

      - name: Cargo test --no-default-features --features serde,kems,sigs,std
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --no-default-features --features serde,kems,sigs,std --manifest-path oqs/Cargo.toml

      - name: Cargo test --no-default-features --features serde,kems,sigs
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --no-default-features --features serde,kems,sigs --manifest-path oqs/Cargo.toml

      - name: Cargo test --no-default-features --features non_portable,kems,sigs,std
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --no-default-features --features non_portable,kems,sigs,std --manifest-path oqs/Cargo.toml

      - name: Cargo fmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo clippy
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :
